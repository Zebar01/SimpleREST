'use strict';

let request = require('request');
let cheerio = require('cheerio');
let express = require('express');
let fs      = require('fs');

let app = express();
let mkdirp = require('mkdirp');

app.use(require('cookie-parser')());
app.use(require('body-parser').urlencoded({ extended: true }));
app.use(require('express-session')({ secret: 'Super pupper secret string.!.', resave: true, saveUninitialized: true }));


    /*********************************************************************************************** */
    //создание папки - работает
    //Дата и время
    let now = new Date();         
    let god = now.getFullYear();
    let mes = now.getMonth()+1;
    let den = now.getDate();
    let pathjs =`/public/json/cian/`+god+'/'+mes+'/'+den;       //год-месяц-день
    let path1=__dirname+pathjs;
    let path2=path1+'/big';
    let t1= '';          //переменная времени начала опроса
    let t2='';
    //let h3='';
    let fl_opr=true;                //становится фалсе при попытке лролса нового района

     mkdirp(path1, function (err) {
        if (err) console.error(err)
        else console.log(path1)   //путь к созданной папке в терминале*/
    });
     mkdirp(path2, function (err) {
        if (err) console.error(err)
        else console.log(path2)   //путь к созданной папке в терминале*/
    });

let tmp_counter=0;
let ID_Ray = new Array();
ID_Ray = [33,130];//125, 126, 127, 128,  129,  131, 132, 23,  24,  25,  26,   27,  28,  29,  30,  31,  32,  33, 34,  35,  36,  37,  38 , 39,  40,  41,  42, 43,  44,  45,  46,   47,  48,  49,  50,  51,   52,  53,   54,  55, 112,  113,  114,  115,  116,  117,  118,   119,   121,  122,  123,  124,   13,  14,  15,  16, 17,  18,  19,  20,  21,  22, 56,  57,   58,  59,  60,  61,  62,  63,  64,  65,  66,  67,  68,   69,   70,  71, 100,  101,  102,  103,  104,  105,  106,   107,   108,  109,  111,  84,   85,  86,  87,  88,  89,  90,  91,   92,  93,   94,  96,   97,   98,   99, 72,  73,  74,  76,  78,  79,  80,  81,  82,  83 ,130,120,110,95,75,77]

//130,120,110,95,75,77
/************************************************************************ */
//массивы для квартир по округу и по комнатам
let objAO= new Array();
let arr1=new Array();
let arr2=new Array();
let arr3=new Array();
let arrtmp=new Array();
//
/************************************************************************** */
// район и их индекс, первый элемент - название района, второй -индекс
let str ='Куркино, 125, Митино, 126, Покровское-Стрешнево, 127, Северное Тушино, 128, Строгино, 129, Хорошево-Мневники, 130, Щукино, 131, Южное тушино, 132, Аэропорт, 23, Беговой, 24, Бескудниковский, 25, Войковский, 26, Восточное Дегунино, 27, Головинский, 28, Дмитровский, 29, Западное Дегунино, 30, Коптево, 31, Левобережный, 32, Молжаниновский, 33, Савёловский, 34, Сокол, 35, Тимирязевский, 36, Ховрино, 37, Хорошевский, 38, Алексеевский, 39, Алтуфьевский, 40, Бабушкинский, 41, Бибирево, 42, Бутырский, 43, Лианозово, 44, Лосиноостровский, 45, Марьфино, 46, Марьина Роща, 47, Останкинский, 48, Отрадное, 49, Ростокино, 50, Свиблово, 51, Северное Медведково, 52, Северный, 53, Южное Медведково, 54, Свиблово, 55, Внуково, 112, Дорогомилово, 113, Крылатское, 114, Кунцево, 115, Можайский, 116, Ново-Переделкино, 117, Очаково-Матвеевское, 118, Проспект Вернадского, 119, Раменки, 120, Солнцево, 121, Тропарёво-Никулино, 122, Филёвский парк, 123, Фили-Давыдково, 124, Арбат, 13, Басманный, 14, Замоскворечье, 15, Красносельский, 16, Мещанский, 17, Пресненский, 18, Таганский, 19, Тверской, 20, Хамовники, 21, Якиманка, 22, Богородское, 56, Вешняки, 57, Восточное Измайлово, 58, Восточный, 59, Гольяново, 60, Иваноское, 61, Измайлово, 62, Косино-Ухтомский, 63, Метрогородок, 64, Новогиреево, 65, Новокосино, 66, Перово, 67, Преображенское, 68, Северное Измайлово, 69, Соколиная гора, 70, Сокольники, 71, Академический, 100, Гагаринский, 101, Зюзино, 102, Коньково, 103, Котловка, 104, Ломоносовский, 105, Обручевский, 106, Северное Бутово, 107, Тёплый стан, 108, Черёмушки, 109, Южное Бутово, 110, Ясенево, 111, Бирюлёво Восточное, 84, Бирюлёво Западное, 85, Братеево, 86, Даниловский, 87, Донской, 88, Зябликово, 89, Москворечье-Сабурово, 90, Нагатино-Садовники, 91. Нагатинский затон, 92, Нагорный, 93, Орехово-Борисово Северное, 94, Орехово-Борисово Южное, 95, Царицыно, 96, Чертаново Северное, 97, Чертаново центральное, 98, Чертаново Южное, 99, Выхино-Жулебино, 72, Капотня, 73, Кузьминки, 74, Лефортово, 75, Люблино, 76, Марьино, 77, Некрасовка, 78, Нижегородский, 79, Печатники, 80, Рязанский, 81, Текстильщики, 82, Южнопортовый, 83'
let mass = str.split(',',300);          //разделение строки в массив
for (let i=0; i<mass.length;i++){
    mass[i]=mass[i].replace(' ', '');
}
let d1=mass.length;

let idr=0;
let deal_type = 'sale';
let engine_version = 2;
let maxprice = 25000000;
let minprice = 4000000;
let offer_type = 'flat';
let region = 1;
let query_type= 'newquery';
let get_app_pages=false;
                                                        /* ид районов
                                                        СЗАО 1 : Куркино 125, Митино 126, Покровское-Стрешнево 127, Северное Тушино 128, Строгино 129, Хорошево-Мневники 130, Щукино 131, Южное тушино 132
                                                        САО 5 : Аэропорт 23, Беговой 24, Бескудниковский 25, Войковский 26, Восточное Дегунино 27, Головинский 28, Дмитровский 29, Западное Дегунино 30, Коптево 31, Левобережный 32, Молжаниновский 33, Савёловский 34, Сокол 35, Тимирязевский 36, Ховрино 37, Хорошевский 38 
                                                        СВАО 6: Алексеевский 39, Алтуфьевский 40, Бабушкинский 41, Бибирево 42, Бутырский 43, Лианозово 44, Лосиноостровский 45, Марьфино 46, Марьина Роща 47, Останкинский 48, Отрадное 49, Ростокино 50, Свиблово 51, Северное Медведково 52, Северный 53, Южное Медведково 54, Свиблово 55
                                                        ЗАО 11: Внуково 112, Дорогомилово 113, Крылатское 114, Кунцево 115, Можайский 116, Ново-Переделкино 117, Очаково-Матвеевское 118, Проспект Вернадского 119, Раменки 120, Солнцево 121, Тропарёво-Никулино 122, Филёвский парк 123, Фили-Давыдково 124, Конезавод 349, Рублёво-Архангельское 348, Сколково 350
                                                        ЦАО 4: Арбат 13, Басманный 14, Замоскворечье 15, Красносельский 16, Мещанский 17, Пресненский 18. Таганский 19, Тверской 20, Хамовники 21, Якиманка 22
                                                        ВАО 7: Богородское 56, Вешняки 57, Восточное Измайлово 58, Восточный 59, Гольяново 60, Иваноское 61, Измайлово 62, Косино-Ухтомский 63, Метрогородок 64, Новогиреево 65, Новокосино 66, Перово 67, Преображенское 68, Северное Измайлово 69, Соколиная гора 70, Сокольники 71
                                                        ЮЗАО 10: Академический 100, Гагаринский 101, Зюзино 102, Коньково 103, Котловка 104, Ломоносовский 105, Обручевский 106, Северное Бутово 107, Тёплый стан 108, Черёмушки 109, Южное Бутово 110, Ясенево 111
                                                        ЮАО 9: Бирюлёво Восточное 84, Бирюлёво Западное 85, Братеевот 86, Даниловский 87, Донской 88, Зябликово 89, Москворечье-Сабурово 90, Нагатино-Садовники 91. Нагатинский затон 92, Нагорный 93. Орехово-Борисово Северное 94, Орехово-Борисово Южное 95, Царицыно 96, Чертаново Северное 97, Чертаново центральное 98, Чертаново Южное 99
                                                        ЮВАО 8: Выхино-Жулебино 72, Капотня 73, Кузьминки 74, Лефортово 75, Люблино 76, Марьино 77, Некрасовка 78, Нижегородский 79, Печатники 80, Рязанский 81, Текстильщики 82, Южнопортовый 83
                                                        130,120,110,95,75,77
                                                        */
let ne1etaj=0;     	// не первый этаж
let vtor=1;            //только вторичка
let only_flat=1;
let kolkom='';  //1;           //количество комнат
let flOR=false;                 //флаг для тех районов, которые надо опрашивать по одному

// формирование url 
let url='';
let komnat=1;
let tekkomjs=0;
  let url2=function(rayon,komnat){
        url = `https://www.cian.ru/cat.php?currency=2&deal_type=`+deal_type;
        url += `&district%5B0%5D=`+ID_Ray[idr]+`&engine_version=`+engine_version;
        url += `&is_first_floor=`+ne1etaj;	// не первый этаж
        url += `&maxprice=`+maxprice+`&minprice=`+minprice;
        url += `&object_type%5B0%5D=`+vtor; // только вторичка
        url += `&offer_type=`+offer_type;
        url += `&only_flat=`+only_flat;
        url += "&repair%5B2%5D=1&repair%5B2%5D=2&repair%5B2%5D=3";		// ремонт, косм - 1, евро - 2, без - 3
        url += komnat == 1 ? '&room1=1': '';
        url += komnat == 2 ? '&room2=1': '';
        url += komnat == 3 ? '&room3=1': '';
        url += komnat == 4 ? '&room1=1'+'&room2=1'+'&room3=1': '';                //опрос сразу однушек, двушек и трёшек
        url += "&totime=2592000";			// выборка за месяц
        console.log(url);
    }

  let kolpred=0;  
  let total_area=0; 
  let stopper = '';
  let kidr=0;
  let arr_pos = new Array();        // массив хранения позиций
  let arr_key = new Array();        // массив ключей
  let arr_adr = new Array();        // массив хранения адресов
  let arr_totar = new Array();        // массив площадей квартир
  let arr_pri = new Array();        // массив цен квартир
  let arr_rooms = new Array();                                    //"rooms_count - количество комнат
  let i4=0;                         // переменная-индекс для заполнения массивов


  let request_url = function(u, arr, page){
      
      let opts = {  uri: u + `&p=${page}`,
                    headers: {
                        'Pragma': 'no-cache',
                        'Accept-Encoding': 'gzip, deflate, sdch, br',
                        'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4',
                        'Upgrade-Insecure-Requests': '1', 
                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',
                        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                        'Referer': 'https://www.cian.ru/',
                        'Cookie': '_CIAN_GK=07fc4b80-0c0e-11e7-8817-4671176866ff; anonymous_id=07fc086e-0c0e-11e7-8817-4671176866ff; app_banner_disabled=true; _ym_uid=1489864008474635110; _ym_isad=2; _gat_UA-30374201-2=1; _ad_parallax_checked=1489864044891; _ad_stretch_checked=1489864044931; _ad_branding_checked=1489864044933; _ad_mobile_native_listing_checked=1489864044936; _ad_mobile_card_tgb_checked=1489864044939; _ad_mobile_parallax_serp_checked=1489864044941; _ad_serp_item_native_checked=1489864044943; _ad_card_toplong_exp_checked=1489864044944; _ad_serp_long_exp_checked=1489864044946; crtg_rta=; _ga=GA1.2.2070707254.1489864008; rrrbt=; rrpvid=235016421735327; amplitude_idcian.ru=eyJkZXZpY2VJZCI6IjQ1MDVkZDEwLTFmYWMtNDEwNC05Mzc2LWM4ZDJlMmQ1NTBkMVIiLCJ1c2VySWQiOm51bGwsIm9wdE91dCI6ZmFsc2UsInNlc3Npb25JZCI6MTQ4OTg2NDAwODI5MSwibGFzdEV2ZW50VGltZSI6MTQ4OTg2NDA0NTM5OCwiZXZlbnRJZCI6MCwiaWRlbnRpZnlJZCI6MCwic2VxdWVuY2VOdW1iZXIiOjB9; _ym_visorc_34229100=b; rcuid=58cd856f6636b3121cb0030f; rrpusid=58cd856f6636b3121cb0030f; rrlpuid=; _ym_visorc_67132=w; flocktory-uuid=7240a786-d5ce-4be4-ab27-b774e44169de-3',                         
                        'Connection': 'keep-alive',
                        'Cache-Control': 'no-cache',
                    },
                    gzip: true
      };


       
      request(opts, function (error, response, body) {
            if (error)
                console.log(error);
                    
            if(response && response.statusCode && response.statusCode == 200) {
                let $ = cheerio.load(body);
                let text = $('script:contains("window._offers")').text();
                let tmp = '';
                try{
                    tmp = text.match(/window._offers = (.*);\s+window._region/)[1];
                    
                    let obj = JSON.parse(tmp); 
                    let first_key = '';
                    //get first key in loaded object                   
                    for(let key in obj){
                        first_key = key;
                        break;    
                    }
                    for(let key in obj){     //формируем массивы                      //Подсчитываем количество предложений !дублируются рекламные
                        
                        
                    
                    /************************************************************** */
                        // функция заполнения массива
                        let zapmas = function(/*DlinaMas,*/IDMasRay){
                                //DlinaMas=DlinaMas-1;
                                if ((IDMasRay>=125) && (IDMasRay<=132)){      // если ид района входит в СЗАО, то записываем это предложение в массив
                                let objAOElem = {                         //ассоциативный массив для записи в json по округу
                                    position: obj[key]["phone_data_layer"]["position"],     
                                    price:obj[key]["phone_data_layer"]["price"],
                                    total_area: obj[key]["total_area"],
                                    ID: obj[key]["phone_data_layer"]["id"],
                                    Rajon: IDMasRay,
                                    adress: obj[key]["address_string"],
                                    rooms: obj[key]["rooms_count"] 
                                };
                                objAO.push(objAOElem);        //массив административного округа  
                                }
                        }
                        /****************************** */
                        //РАЙОН ТЕКУЩЕГО ЭЛЕМЕНТА
                        let tmpAdrDis=obj[key]["address_string"];
                        tmpAdrDis=String(tmpAdrDis);
                        let tmparr = tmpAdrDis.split(',',4);          //разделение адреса на 4 части Город, район, улица, дом
                        tmparr[1]=tmparr[1].replace("район", "");
                        tmparr[1]=tmparr[1].replace("  ", "");
                        tmpAdrDis=tmparr[1];
                        /************************************* */

                        for (let i3=0; i3<d1; i3++){
                            if (mass[i3]==tmpAdrDis){
                                i3++;
                                let IDRay=mass[i3];
                                zapmas(IDRay);  
                            }
                        }
                    }
               
                    console.log(`page == ${page}\nstopper == ${stopper}\nfirst_key == ${first_key}`);
                    if(first_key != stopper){
                    //init stopper after fist page
                        if(stopper == '')
                            stopper = first_key;
                        //save page data    
                        console.log('page added');
                        arr.push(obj);                   
                        //start recursive page grubbing
                        setTimeout(function(){
                            tmp_counter++;
                            request_url(u, arr, ++page);
                        }, 1000);
                    } else {
                        //запись json
//                        fs.writeFileSync(/*__dirname*/path2 + '/'+ID_Ray[idr]+'-'+komnat+'.json', JSON.stringify(arr));
//                        console.log(path2 + '/'+ID_Ray[idr]+'-'+komnat+'.json'); // в консоль пишется, какой json был записан

                        let fltmp=true;                      //временно пока для всех квартир
               
                            
                        for( i2=0; objAO.length;i2++){   //формирование массивов с опр. кол. комнат 
                            if (objAO[i2].rooms==1){
                                arr1.push(objAO[i2])
                            }
                            if (objAO[i2].rooms==2){
                                arr2.push(objAO[i2])
                            }
                            if (objAO[i2].rooms==3){
                                arr3.push(objAO[i2])
                            }
                        }
                        
                        let zapipod = function(komn){           //записб и подсчёт
                            if (komn==1){
                                d1=arr1.length;
                                arrtmp=arr1.slice(0,d1);  
                            }
                            if (komn==2){
                                d1=arr2.length;
                                arrtmp=arr2.slice(0,d1);  
                            }
                            if (komn==3){
                                d1=arr3.length;
                                arrtmp=arr3.slice(0,d1);  
                            }
                        }

                        kolpred=d1; 
                        let maxpr=0;
                        let minpr=999999999999;
                        let avgpr=0;
                        let alltotar=0;
                        let priarearur=0;
                        let allprice=0;
                        let dataopgod=god;
                        let dataopmes=mes;
                        let dataopden=den;
                        let tmp=0;

                        for(let i2=0; i2<kolpred; i2++){
                            tmp=arrtmp[i2].price;                     //tmp -  временная переменная для опр. макс. и мин. цены
                            alltotar=alltotar+arrtmp[i2].total_area;
                            if (maxpr<tmp){
                                maxpr=tmp;
                            }
                            if (minpr>tmp){
                                minpr=tmp;
                            }
                            if (i2==kolpred-1){
                                priarearur=~~((avgpr+tmp)/alltotar);        // цена за кв. м.
                                allprice=avgpr+tmp;                  //общая цена всех квартир
                                avgpr=(avgpr+tmp)/kolpred;          //средняя цена квартиры
                                avgpr=~~avgpr;                      //целая часть
                            } else {   
                                avgpr=(avgpr+tmp);
                            }
                        }
                        alltotar=~~(alltotar*10);
                        alltotar=alltotar/10;
                        console.log('максимальная цена квартиры ='+maxpr);
                        console.log('минимальная цена квартиры ='+minpr);
                        console.log('средняя цена квартиры ='+avgpr);
                        console.log('цена всех квартир ='+allprice);
                        console.log('цена за кв. метр ='+priarearur);
                        console.log('общая площадь ='+alltotar);
                        console.log('Дата = '+dataopgod);
                        console.log('Дата = '+dataopmes);
                        console.log('Дата = '+dataopden);
                        console.log('Количество предложений = '+kolpred);

                        let obj4 = {           //ассоциативный массив для записи в json
                                        maxpr:maxpr,
                                        minpr:minpr,
                                        avgpr:avgpr,
                                        allprice:allprice,
                                        priarearur:priarearur,
                                        alltotar:alltotar,
                                        dataopgod:dataopgod,
                                        dataopmes:dataopmes,
                                        dataopden:dataopden,
                                        kolpred:kolpred
                                    };
                                    objarrtmp.unshift(obj4);
                        
                       fs.writeFileSync(/*__dirname*/path1 + '/'+ID_Ray[idr]+'-'+komnat+'-obj2.json', JSON.stringify(arrtmp));
                       console.log(path1 + '/'+ID_Ray[idr]+'-'+komnat+'-obj2.json'); // в консоль пишется, какой json был записан
                       fs.writeFileSync(/*__dirname*/path1 + '/'+ID_Ray[idr]+'-'+komnat+'lite.json', JSON.stringify(obj4));     //запись итогов по району
                       console.log(path1 + '/'+ID_Ray[idr]+'-'+komnat+'-obj2.json'); // в консоль пишется, какой json был записан
                       arrtmp.length=0;
                       

                       tekkomjs=komnat;
                       kolpred=0;
                        if (komnat==3){
                            
                            flexidr=true;
                            flexkom=false;
                            kidr=idr+1;
                            let tmpr=''
                            tmpr=ID_Ray[kidr];      // временная переменная ид района после  опроса трёшек
                                if (kidr==ID_Ray.length){    //записан последний район, выходим из цикла интервал
                                                            // и дальше опрашивать не надо
                                    flexidr=false;                            
                                    flex=true;
                                    console.log('ВСЁ');
                                }
                        }
                        else {
                            flexkom=true;
                        }
                    }
                } catch(err){
                    console.log('ERROR: ' + err);
                    t2= Date();
                    console.log('t2='+t2);
                    console.log(ID_Ray[idr]+' '+idr);
                    console.log('tmp_counter='+tmp_counter);
                     //res.send(JSON.stringify(err));
                     fs.writeFileSync(__dirname+'opros.txt', JSON.stringify(ID_Ray[idr]));
                    return;
                }      
            } else {
                console.log('Empty response. statusCode:', response.statusCode);
                
               // res.send(response.statusCode);
                
               return;
            }
        });
  };

//opros po komnat
let flexidr=false;
let flexkom=true;
let flex=false;
komnat=0;

    
let Opros1k = function(){               //опрос однушек
            flexkom==false;
            komnat=1;
            stopper='';
            var my_arr = [];
            url2(ID_Ray[idr],komnat);        //формируем урл с учётом района и количества комнат         
            tmp_counter++;                  
            request_url(url, my_arr, 1);
        };
let Opros2k = function(){               //опрос двушек и трёшек
            flexkom==false;
            komnat=2;
            stopper='';
            var my_arr = [];
            url2(ID_Ray[idr],komnat);        //формируем урл с учётом района и количества комнат                         
            tmp_counter++;
            request_url(url, my_arr, 1);
        };
let Opros3k = function(){               //опрос двушек и трёшек
            flexkom==false;
            komnat=3;
            stopper='';
            var my_arr = [];
            url2(ID_Ray[idr],komnat);        //формируем урл с учётом района и количества комнат                         
            tmp_counter++;
            request_url(url, my_arr, 1);
        };
let Opros123k = function(){               //опрос двушек и трёшек
            flexkom==false;
            komnat=4;
            stopper='';
            var my_arr = [];
       //     url2(ID_Ray[idr],komnat);        //формируем урл с учётом района и количества комнат                         
            tmp_counter++;
            request_url(url, my_arr, 1);
        };        

let ID_R= function(){       //увеличение индекса в массиве районов на 1
    idr++;
    flexidr=false;
    flexkom=true;
    komnat=0;
    tekkomjs=0
    flOR=false;
    if (ID_Ray[idr]==130 || ID_Ray[idr]==120 || ID_Ray[idr]==110 || ID_Ray[idr]==95 || ID_Ray[idr]==75 || ID_Ray[idr]==77){
        flOR=true;
    }
}

let OprK = function (){
        setTimeout (function OprosKom(){     
        if (flex==true) {    //если тру, то  уже опросили и пора выходить из опроса
            console.log('ТОЧНО ВСЁ');
            var run = function(need_stop){              //принудительный стоп скрипта
                if(!need_stop){
                    setTimeout(function(){
                        run(true);
                    }, 1000);
                }
            };
            run();
            return;
        }
        if (fl_opr=true){               //если флагопроса = тру, то опрашиваем
            if (flexidr==true){         //увеличение индекса в массиве районов на 1, переход к след району
                ID_R();
            }
            if (flexkom==true && komnat==2 && tekkomjs==2 && flOR==true){     //опрос трёшек
                Opros3k();

            }
            if (flexkom==true && komnat==1 && tekkomjs==1&& flOR==true){     //опрос двушек
                Opros2k();

            }
            if (flexkom==true && komnat==0 && tekkomjs==0&& flOR==true){       //опрос однушек
                Opros1k();
            }
            if (flexkom==true && flOR==false){       //опрос 
                Opros123k();
            }
        }
    setTimeout(OprosKom,4000);
    },4000);
};
        OprK();
